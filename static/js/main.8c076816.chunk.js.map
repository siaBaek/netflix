{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Movies/TopRatedMovie.tsx","Routes/Movies/UpcomingMovie.tsx","atom.ts","Routes/Movies/MovieModal.tsx","Routes/Movies/Movie.tsx","Routes/SearchModal.tsx","Routes/Search.tsx","Routes/Tvs/TopRatedTv.tsx","Routes/Tvs/TvModal.tsx","Routes/Tvs/PopularTv.tsx","Routes/Tvs/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","to","whileHover","xmlns","width","height","viewBox","path","d","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","fetch","then","response","json","getTopRated","getUpcoming","getMovieDetail","movieId","getAiringTodayTv","getPopularTv","getTopTv","DEFAULT_IMG","makeImagePath","id","format","Loader","Slider","SliderTitle","h3","Next","Row","Box","bgPhoto","Info","black","Overlay","BigMovie","BigCover","BigTitle","BigOverview","p","rowVariants","hidden","window","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duaration","infoVariants","opacity","TopRatedMovie","bigMovieMatch","useQuery","topData","topIsLoading","isLoading","index","setIndex","leaving","setLeaving","toggleLeaving","clickedMovie","params","results","find","movie","AnimatePresence","onExitComplete","duration","slice","map","backdrop_path","title","totalMovies","length","maxIndex","Math","floor","icon","faChevronRight","size","style","backgroundImage","overview","UpcomingMovie","upcomingData","upcomingIsLoading","isDetail","atom","key","default","MovieModal","setDetail","useSetRecoilState","a","enabled","refetchOnWindowFocus","detailData","refetch","Wrapper","Banner","Title","h2","Overview","Movie","moviesData","moviesIsLoading","SearchModal","location","useLocation","URLSearchParams","search","query","movieData","movieLoading","tvData","tvLoading","movieIndex","setMovieIndex","tvIndex","setTvIndex","total_results","name","tv","tvId","totalTvs","TopRatedTv","bigTvMatch","topTvData","topTvIsLoading","TvModal","PopularTv","popularTvData","popularTvIsLoading","Tv","tvsData","tvsIsLoading","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.8c076816.chunk.js","sourcesContent":["import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  padding: 20px 60px;\n  background: black;\n  color: white;\n  font-size: 14px;\n  z-index: 9;\n`;\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Search = styled.form`\n  cursor: pointer;\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/\");\n  const tvMatch = useRouteMatch(\"/tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n  const history = useHistory();\n  const { register, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n    history.push(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Link to=\"/\">\n          <Logo\n            variants={logoVariants}\n            whileHover=\"active\"\n            animate=\"normal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1024\"\n            height=\"276.742\"\n            viewBox=\"0 0 1024 276.742\"\n          >\n            <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n          </Logo>\n        </Link>\n\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>{\" \"}\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>{\" \"}\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -185 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","const API_KEY = \"463887cc292e19068220ef7660901eae\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\ninterface IMovie {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  name: string;\n  overview: string;\n  vote_average: string;\n}\n\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\n// export interface IGetLatestResult {\n//   title: string;\n// }\n\ninterface ITopRated {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n}\n\nexport interface IGetTopRatedResult {\n  results: ITopRated[];\n}\n\ninterface IUpcoming {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n}\n\nexport interface IGetUpcomingResult {\n  results: IUpcoming[];\n}\n\ninterface IGenre {\n  id: number;\n  name: string;\n}\n\nexport interface IGetMovieDetailResult {\n  backdrop_path: string;\n  genres: IGenre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  overview: string;\n  poster_path: string;\n  release_date: Date;\n  runtime: number;\n  status: string;\n  vote_average: number;\n  vote_count: number;\n  tagline: string;\n  name?: string;\n  title?: string;\n}\n\ninterface ISeason {\n  air_date: Date;\n  episode_count: number;\n  id: number;\n  name: string;\n}\n\nexport interface IGetTvDetailResult {\n  backdrop_path: string;\n  episode_run_time: number[];\n  first_air_date: Date;\n  genres: IGenre[];\n  homepage: string;\n  id: number;\n  in_production: boolean;\n  languages: string[];\n  last_air_date: Date;\n  name: string;\n  number_of_episodes: number;\n  number_of_seasons: number;\n  origin_country: string[];\n  original_language: string;\n  overview: string;\n  poster_path: string;\n  seasons: ISeason[];\n  tagline: string;\n  type: string;\n  vote_average: number;\n  vote_count: number;\n}\n\ninterface ITv {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  original_name: string;\n  name: string;\n  vote_average: string;\n  overview: string;\n}\n\nexport interface IGetTvResult {\n  page: number;\n  results: ITv[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport function getMovies() {\n  return fetch(\n    `${BASE_PATH}/movie/now_playing?api_key=${API_KEY}&language=ko-KR&append_to_response=KR`\n  ).then((response) => response.json());\n}\n\n// export function getLatest() {\n//   return fetch(`${BASE_PATH}/movie/latest?api_key=${API_KEY}`).then(\n//     (response) => response.json()\n//   );\n// }\n\nexport function getTopRated() {\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getUpcoming() {\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport const getMovieDetail = (movieId: string) => {\n  return fetch(\n    `${BASE_PATH}/movie/${movieId}?api_key=${API_KEY}&language=ko-KR&append_to_response=KR`\n  ).then((response) => response.json());\n};\n\nexport const getOnTheAirTv = () => {\n  return fetch(\n    `${BASE_PATH}/tv/on_the_air?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n};\n\nexport const getAiringTodayTv = () => {\n  return fetch(\n    `${BASE_PATH}/tv/airing_today?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n};\n\nexport const getPopularTv = () => {\n  return fetch(\n    `${BASE_PATH}/tv/popular?api_key=${API_KEY}&language=ko-KR`\n  ).then((response) => response.json());\n};\n\nexport const getTopTv = () => {\n  return fetch(\n    `${BASE_PATH}/tv/top_rated?api_key=${API_KEY}&language=ko-KR&page=1&region=KR`\n  ).then((response) => response.json());\n};\n\nexport const getTvDetail = (tvId: string) => {\n  return fetch(\n    `${BASE_PATH}/tv/${tvId}?api_key=${API_KEY}&language=ko-KR&append_to_response=KR`\n  ).then((response) => response.json());\n};\n\nexport const DEFAULT_IMG =\n  \"https://images.unsplash.com/photo-1634157703702-3c124b455499?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1528&q=80\";\n\nexport const searchMovie = (query: string) => {\n  return fetch(\n    `${BASE_PATH}/search/movie?api_key=${API_KEY}&language=ko-KR&query=${query}&page=1&region=KR`\n  ).then((response) => response.json());\n};\n\nexport const searchTv = (query: string) => {\n  return fetch(\n    `${BASE_PATH}/search/tv?api_key=${API_KEY}&language=ko-KR&query=${query}&page=1&region=KR`\n  ).then((response) => response.json());\n};\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getTopRated, IGetTopRatedResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: 20px;\n  margin-bottom: 300px;\n  padding: 30px 0%;\n`;\n\nconst SliderTitle = styled.h3`\n  position: absolute;\n  top: -10px;\n  font-weight: 600;\n  color: white;\n  font-size: 28px;\n  margin-left: 60px;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 100px;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 60px;\n  margin-bottom: 400px;\n`;\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst offset = 6;\n\nfunction TopRatedMovie() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n  const { data: topData, isLoading: topIsLoading } =\n    useQuery<IGetTopRatedResult>([\"movies\", \"topRated\"], getTopRated);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const increaseIndex = () => {\n    if (topData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = topData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => history.push(\"/\");\n  const clickedMovie =\n    bigMovieMatch?.params.movieId &&\n    topData?.results.find(\n      (movie) => movie.id === +bigMovieMatch.params.movieId\n    );\n  return (\n    <>\n      {topIsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Slider>\n            <SliderTitle>Top Rated</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {topData?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n              <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n            </Next>\n          </Slider>\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.title}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default TopRatedMovie;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getUpcoming, IGetUpcomingResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: 20px;\n  margin-bottom: 300px;\n  padding: 30px 0%;\n`;\n\nconst SliderTitle = styled.h3`\n  position: absolute;\n  top: -10px;\n  font-weight: 600;\n  color: white;\n  font-size: 28px;\n  margin-left: 60px;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 100px;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 60px;\n  margin-bottom: 400px;\n`;\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst offset = 6;\n\nfunction UpcomingMovie() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n  const { data: upcomingData, isLoading: upcomingIsLoading } =\n    useQuery<IGetUpcomingResult>([\"movies\", \"upcoming\"], getUpcoming);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const increaseIndex = () => {\n    if (upcomingData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = upcomingData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => history.push(\"/\");\n  const clickedMovie =\n    bigMovieMatch?.params.movieId &&\n    upcomingData?.results.find(\n      (movie) => movie.id === +bigMovieMatch.params.movieId\n    );\n  return (\n    <>\n      {upcomingIsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Slider>\n            <SliderTitle>Upcoming</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {upcomingData?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n              <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n            </Next>\n          </Slider>\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.title}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default UpcomingMovie;\n","import { atom } from \"recoil\";\n\nexport const isDetail = atom({\n  key: \"movieDetail\",\n  default: false,\n});\n\n// export const isTvDetail = atom({\n//   key: \"tvDetail\",\n//   default: false,\n// });\n\n// export const GlobalSearchClose = atom({\n//   key: \"searchClose\",\n//   default: false,\n// });\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { DEFAULT_IMG, getMovieDetail, IGetMovieDetailResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDetail } from \"../../atom\";\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nfunction MovieModal() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n  const setDetail = useSetRecoilState(isDetail);\n\n  const {\n    data: detailData,\n    isLoading: detailIsLoading,\n    refetch,\n  } = useQuery<IGetMovieDetailResult>(\n    [\"movies\", bigMovieMatch?.params.movieId],\n    async () => bigMovieMatch && getMovieDetail(bigMovieMatch?.params.movieId),\n    {\n      enabled: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  useEffect(() => {\n    if (bigMovieMatch?.params.movieId) {\n      refetch();\n    }\n  }, [bigMovieMatch?.params.movieId, refetch]);\n\n  const onOverlayClick = () => {\n    history.push(\"/\");\n    setDetail(false);\n  };\n\n  return (\n    <AnimatePresence>\n      {bigMovieMatch ? (\n        <>\n          <Overlay\n            onClick={onOverlayClick}\n            exit={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          />\n          <BigMovie\n            style={{ top: scrollY.get() + 100 }}\n            layoutId={bigMovieMatch.params.movieId}\n          >\n            {detailData && (\n              <>\n                <BigCover\n                  style={{\n                    backgroundImage: `linear-gradient(to top, black, transparent),  url(${\n                      detailData.backdrop_path\n                        ? makeImagePath(detailData.backdrop_path)\n                        : DEFAULT_IMG\n                    })`,\n                  }}\n                />\n                <BigTitle>{detailData.title}</BigTitle>\n                <BigOverview>{detailData.overview}</BigOverview>\n              </>\n            )}\n          </BigMovie>\n        </>\n      ) : null}\n    </AnimatePresence>\n  );\n}\n\nexport default MovieModal;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { DEFAULT_IMG, getMovies, IGetMoviesResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport TopRatedMovie from \"./TopRatedMovie\";\nimport UpcomingMovie from \"./UpcomingMovie\";\nimport MovieModal from \"./MovieModal\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 100px;\n`;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\nconst Slider = styled.div`\n  position: relative;\n  top: 20px;\n  margin-bottom: 300px;\n  padding: 30px 0%;\n`;\n\nconst SliderTitle = styled.h3`\n  position: absolute;\n  top: -10px;\n  font-weight: 600;\n  color: white;\n  font-size: 28px;\n  margin-left: 60px;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 100px;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 60px;\n  margin-bottom: 400px;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst offset = 6;\n\nfunction Movie() {\n  const history = useHistory();\n  const { data: moviesData, isLoading: moviesIsLoading } =\n    useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseIndex = () => {\n    if (moviesData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = moviesData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n\n  return (\n    <Wrapper>\n      {moviesIsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(moviesData?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{moviesData?.results[0].title}</Title>\n            <Overview>{moviesData?.results[0].overview}</Overview>\n          </Banner>\n          <Slider>\n            <SliderTitle>Now Playing</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {moviesData?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={\n                        movie.backdrop_path\n                          ? makeImagePath(movie.backdrop_path, \"w500\")\n                          : DEFAULT_IMG\n                      }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n              <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n            </Next>\n          </Slider>\n\n          <TopRatedMovie />\n          <UpcomingMovie />\n          <MovieModal />\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Movie;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { DEFAULT_IMG, getMovieDetail, IGetMovieDetailResult } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDetail } from \"../atom\";\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nfunction SearchModal() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n  const setDetail = useSetRecoilState(isDetail);\n\n  const {\n    data: detailData,\n    isLoading: detailIsLoading,\n    refetch,\n  } = useQuery<IGetMovieDetailResult>(\n    [\"movies\", bigMovieMatch?.params.movieId],\n    async () => bigMovieMatch && getMovieDetail(bigMovieMatch?.params.movieId),\n    {\n      enabled: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  useEffect(() => {\n    if (bigMovieMatch?.params.movieId) {\n      refetch();\n    }\n  }, [bigMovieMatch?.params.movieId, refetch]);\n\n  const onOverlayClick = () => {\n    history.push(\"/\");\n    setDetail(false);\n  };\n\n  return (\n    <AnimatePresence>\n      {bigMovieMatch ? (\n        <>\n          <Overlay\n            onClick={onOverlayClick}\n            exit={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          />\n          <BigMovie\n            style={{ top: scrollY.get() + 100 }}\n            layoutId={bigMovieMatch.params.movieId}\n          >\n            {detailData && (\n              <>\n                <BigCover\n                  style={{\n                    backgroundImage: `linear-gradient(to top, black, transparent),  url(${\n                      detailData.backdrop_path\n                        ? makeImagePath(detailData.backdrop_path)\n                        : DEFAULT_IMG\n                    })`,\n                  }}\n                />\n                <BigTitle>{detailData.title}</BigTitle>\n                <BigOverview>{detailData.overview}</BigOverview>\n              </>\n            )}\n          </BigMovie>\n        </>\n      ) : null}\n    </AnimatePresence>\n  );\n}\n\nexport default SearchModal;\n","import { useQuery } from \"react-query\";\nimport { IGetMoviesResult, IGetTvResult } from \"../api\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { makeImagePath } from \"./../utils\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DEFAULT_IMG, searchMovie, searchTv } from \"../api\";\nimport { useLocation } from \"react-router\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport SearchModal from \"./SearchModal\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 100px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 6;\n  -webkit-box-orient: vertical;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: 20px;\n  margin-bottom: 300px;\n  padding: 30px 0%;\n`;\n\nconst SliderTitle = styled.h3`\n  position: absolute;\n  top: -10px;\n  font-weight: 600;\n  color: white;\n  font-size: 28px;\n  margin-left: 60px;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 100px;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 60px;\n  margin-bottom: 400px;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nexport const Search = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n\n  const { data: movieData, isLoading: movieLoading } =\n    useQuery<IGetMoviesResult>(\n      [\"movies\", keyword],\n      async () => keyword && searchMovie(keyword)\n    );\n\n  const { data: tvData, isLoading: tvLoading } = useQuery<IGetTvResult>(\n    [\"tv\", keyword],\n    async () => keyword && searchTv(keyword)\n  );\n\n  const [movieIndex, setMovieIndex] = useState(0);\n  const [tvIndex, setTvIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseMovieIndex = () => {\n    if (movieData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = movieData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setMovieIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const increaseTvIndex = () => {\n    if (tvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = tvData.results.length - 1;\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setTvIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onMovieClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n\n  const onTvClicked = (tvId: number) => {\n    history.push(`/tv/${tvId}`);\n  };\n\n  return (\n    <Wrapper>\n      {movieLoading && tvLoading && movieData?.results && tvData?.results ? (\n        <Loader>검색 결과가 없습니다.</Loader>\n      ) : movieData || tvData ? (\n        <>\n          {movieData && movieData.total_results > 0 && (\n            <>\n              <Banner\n                bgPhoto={makeImagePath(\n                  movieData?.results[0].backdrop_path || \"\"\n                )}\n              >\n                <Title>{movieData?.results[0].title}</Title>\n                <Overview>{movieData?.results[0].overview}</Overview>\n              </Banner>\n              <Slider>\n                <SliderTitle>{keyword}로 찾은 영화</SliderTitle>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={movieIndex}\n                  >\n                    {movieData?.results\n                      .slice(offset * movieIndex, offset * movieIndex + offset)\n                      .map((movie) => (\n                        <Box\n                          layoutId={movie.id + \"\"}\n                          key={movie.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          onClick={() => onMovieClicked(movie.id)}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{movie.title}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n                <Next whileHover={{ opacity: 1 }} onClick={increaseMovieIndex}>\n                  <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n                </Next>\n              </Slider>\n            </>\n          )}\n          {tvData && tvData.total_results > 0 && (\n            <>\n              <Banner\n                bgPhoto={makeImagePath(tvData?.results[0].backdrop_path || \"\")}\n              >\n                <Title>{tvData?.results[0].name}</Title>\n                <Overview>{tvData?.results[0].overview}</Overview>\n              </Banner>\n              <Slider>\n                <SliderTitle>{keyword}로 찾은 TV 시리즈</SliderTitle>\n                <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n                  <Row\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={tvIndex}\n                  >\n                    {tvData?.results\n                      .slice(offset * tvIndex, offset * tvIndex + offset)\n                      .map((tv) => (\n                        <Box\n                          layoutId={tv.id + \"\"}\n                          key={tv.id}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          variants={boxVariants}\n                          onClick={() => onTvClicked(tv.id)}\n                          transition={{ type: \"tween\" }}\n                          bgPhoto={\n                            tv.backdrop_path\n                              ? makeImagePath(tv.backdrop_path, \"w500\")\n                              : DEFAULT_IMG\n                          }\n                        >\n                          <Info variants={infoVariants}>\n                            <h4>{tv.name}</h4>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n                <Next whileHover={{ opacity: 1 }} onClick={increaseTvIndex}>\n                  <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n                </Next>\n              </Slider>\n            </>\n          )}\n          <SearchModal />\n        </>\n      ) : (\n        <>\n          <div>No Results</div>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Search;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport {\n  DEFAULT_IMG,\n  getTopRated,\n  getTopTv,\n  IGetTopRatedResult,\n  IGetTvResult,\n} from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: 20px;\n  margin-bottom: 300px;\n  padding: 30px 0%;\n`;\n\nconst SliderTitle = styled.h3`\n  position: absolute;\n  top: -10px;\n  font-weight: 600;\n  color: white;\n  font-size: 28px;\n  margin-left: 60px;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 100px;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 60px;\n  margin-bottom: 400px;\n`;\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst offset = 6;\n\nfunction TopRatedTv() {\n  const history = useHistory();\n  const bigTvMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\n  const { scrollY } = useViewportScroll();\n  const { data: topTvData, isLoading: topTvIsLoading } = useQuery<IGetTvResult>(\n    [\"tv\", \"top_Rated\"],\n    getTopTv\n  );\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const increaseIndex = () => {\n    if (topTvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = topTvData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    history.push(`/tv/${tvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/tv\");\n  const clickedMovie =\n    bigTvMatch?.params.tvId &&\n    topTvData?.results.find((tv) => tv.id === +bigTvMatch.params.tvId);\n  return (\n    <>\n      {topTvIsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Slider>\n            <SliderTitle>Top Rated</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {topTvData?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={\n                        tv.backdrop_path\n                          ? makeImagePath(tv.backdrop_path, \"w500\")\n                          : DEFAULT_IMG\n                      }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n              <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n            </Next>\n          </Slider>\n          <AnimatePresence>\n            {bigTvMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigTvMatch.params.tvId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.name}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default TopRatedTv;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { DEFAULT_IMG, getTvDetail, IGetTvDetailResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport { useSetRecoilState } from \"recoil\";\nimport { isDetail } from \"../../atom\";\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nfunction TvModal() {\n  const history = useHistory();\n  const bigTvMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\n  const { scrollY } = useViewportScroll();\n  const setDetail = useSetRecoilState(isDetail);\n\n  const {\n    data: detailData,\n    isLoading: detailIsLoading,\n    refetch,\n  } = useQuery<IGetTvDetailResult>(\n    [\"tv\", bigTvMatch?.params.tvId],\n    async () => bigTvMatch && getTvDetail(bigTvMatch?.params.tvId),\n    {\n      enabled: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  useEffect(() => {\n    if (bigTvMatch?.params.tvId) {\n      refetch();\n    }\n  }, [bigTvMatch?.params.tvId, refetch]);\n\n  const onOverlayClick = () => {\n    history.push(\"/tv\");\n    setDetail(false);\n  };\n\n  return (\n    <AnimatePresence>\n      {bigTvMatch ? (\n        <>\n          <Overlay\n            onClick={onOverlayClick}\n            exit={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          />\n          <BigMovie\n            style={{ top: scrollY.get() + 100 }}\n            layoutId={bigTvMatch.params.tvId}\n          >\n            {detailData && (\n              <>\n                <BigCover\n                  style={{\n                    backgroundImage: `linear-gradient(to top, black, transparent),  url(${\n                      detailData.backdrop_path\n                        ? makeImagePath(detailData.backdrop_path)\n                        : DEFAULT_IMG\n                    })`,\n                  }}\n                />\n                <BigTitle>{detailData.name}</BigTitle>\n                <BigOverview>{detailData.overview}</BigOverview>\n              </>\n            )}\n          </BigMovie>\n        </>\n      ) : null}\n    </AnimatePresence>\n  );\n}\n\nexport default TvModal;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport {\n  DEFAULT_IMG,\n  getPopularTv,\n  getTopRated,\n  getTopTv,\n  IGetTopRatedResult,\n  IGetTvResult,\n} from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: 20px;\n  margin-bottom: 300px;\n  padding: 30px 0%;\n`;\n\nconst SliderTitle = styled.h3`\n  position: absolute;\n  top: -10px;\n  font-weight: 600;\n  color: white;\n  font-size: 28px;\n  margin-left: 60px;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 100px;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 60px;\n  margin-bottom: 400px;\n`;\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst offset = 6;\n\nfunction PopularTv() {\n  const history = useHistory();\n  const bigTvMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\n  const { scrollY } = useViewportScroll();\n  const { data: popularTvData, isLoading: popularTvIsLoading } =\n    useQuery<IGetTvResult>([\"tv\", \"popular\"], getPopularTv);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const increaseIndex = () => {\n    if (popularTvData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = popularTvData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    history.push(`/tv/${tvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/tv\");\n  const clickedMovie =\n    bigTvMatch?.params.tvId &&\n    popularTvData?.results.find((tv) => tv.id === +bigTvMatch.params.tvId);\n  return (\n    <>\n      {popularTvIsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Slider>\n            <SliderTitle>Popular</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {popularTvData?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={\n                        tv.backdrop_path\n                          ? makeImagePath(tv.backdrop_path, \"w500\")\n                          : DEFAULT_IMG\n                      }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n              <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n            </Next>\n          </Slider>\n          <AnimatePresence>\n            {bigTvMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigTvMatch.params.tvId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.name}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default PopularTv;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { DEFAULT_IMG, getAiringTodayTv, IGetTvResult } from \"../../api\";\nimport { makeImagePath } from \"../../utils\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport TopRatedTv from \"./TopRatedTv\";\nimport TvModal from \"./TvModal\";\nimport PopularTv from \"./PopularTv\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 100px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: 20px;\n  margin-bottom: 300px;\n  padding: 30px 0%;\n`;\n\nconst SliderTitle = styled.h3`\n  position: absolute;\n  top: -10px;\n  font-weight: 600;\n  color: white;\n  font-size: 28px;\n  margin-left: 60px;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 100px;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 60px;\n  margin-bottom: 400px;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst offset = 6;\n\nfunction Tv() {\n  const history = useHistory();\n  const { data: tvsData, isLoading: tvsIsLoading } = useQuery<IGetTvResult>(\n    [\"tv\", \"airing_today\"],\n    getAiringTodayTv\n  );\n\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const increaseIndex = () => {\n    if (tvsData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = tvsData.results.length - 1;\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    history.push(`/tv/${tvId}`);\n  };\n\n  return (\n    <Wrapper>\n      {tvsIsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(tvsData?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{tvsData?.results[0].name}</Title>\n            <Overview>{tvsData?.results[0].overview}</Overview>\n          </Banner>\n          <Slider>\n            <SliderTitle>Airing today</SliderTitle>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {tvsData?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={\n                        tv.backdrop_path\n                          ? makeImagePath(tv.backdrop_path, \"w500\")\n                          : DEFAULT_IMG\n                      }\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n              <FontAwesomeIcon icon={faChevronRight} size=\"2x\" />\n            </Next>\n          </Slider>\n          <TopRatedTv />\n          <PopularTv />\n          <TvModal />\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Tv;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Movie from \"./Routes/Movies/Movie\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tvs/Tv\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/tv\">\n          <Tv />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Movie />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url(\"https://fonts.googleapis.com/css2?family=Sunflower:wght@300;500;700&display=swap\");\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: \"Sunflower\", sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}